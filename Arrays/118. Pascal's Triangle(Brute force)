
// Not suitable for large numRows due to factorial overflow

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> triangle = new ArrayList<>();
        for(int n =0;n<numRows;n++){
            List<Integer> row= new ArrayList<>();
            for(int k=0;k<=n;k++){
                row.add((int) combination(n,k));
            }
            triangle.add(row);
        }
    return triangle;
    }
    

    private long combination(int n,int k){
        return factorial(n)/(factorial (k)*factorial(n-k));
    }

    private long factorial(int x){
       long fact = 1;
        for(int i=2;i<=x;i++){
            fact = fact*i;
        }
        return fact;
    }
}
